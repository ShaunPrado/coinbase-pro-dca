name: CI/CD

on: [push]

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - uses: mstksg/setup-stack@v2

      - name: Get stack root
        id: get-stack-root
        run: |
          echo "::set-output name=stack-root::$(stack --no-install-ghc path --stack-root || stack path --stack-root)"
        shell: bash

      - name: Cache stack root
        id: cache-stack-root
        uses: actions/cache@v1
        with:
          path: ${{ steps.get-stack-root.outputs.stack-root }}
          key: ${{ matrix.os }}-stack-root-cache

      - name: Cache stack work
        id: cache-stack-work
        uses: actions/cache@v1
        with:
          path: .stack-work
          key: ${{ matrix.os }}-stack-work-cache

      - name: Install dependencies
        run: |
          stack build --only-dependencies

      - name: Build
        run: |
          stack build

      - name: Run tests
        run: |
          stack test

      - name: Install executables
        run: |
          stack --local-bin-path bin install
          mv bin/coinbase-pro-dca bin/${{ matrix.os }}-coinbase-pro-dca
        shell: bash

      - name: Upload executables
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}-coinbase-pro-dca
          path: bin/${{ matrix.os }}-coinbase-pro-dca

  pre-release:
    name: Pre Release
    runs-on: ubuntu-latest
    needs: build

    if: >
      github.ref == 'refs/heads/master'
    steps:
      - name: Download ubuntu-latest-executable
        uses: actions/download-artifact@v1
        with:
          name: ubuntu-latest-coinbase-pro-dca
          path: executables
      - name: Download macOS-latest executable
        uses: actions/download-artifact@v1
        with:
          name: macOS-latest-coinbase-pro-dca
          path: executables
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: true
          title: Latest Build
          files: |
            LICENSE
            executables/*-coinbase-pro-dca

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    if: >
      github.ref == 'refs/heads/master'
    steps:
      - name: Download executable
        uses: actions/download-artifact@v1
        with:
          name: ubuntu-latest-coinbase-pro-dca

      - name: Copy configuration file to server
        uses: appleboy/ssh-action@v0.0.6
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
          script: |
            rm -rf /opt/cbpdca
            mkdir -p /opt/cbpdca
            echo "${{ secrets.CONFIG }}" > /opt/cbpdca/config.yaml

      - name: Copy executable to server
        uses: appleboy/scp-action@v0.0.6
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
        with:
          source: ubuntu-latest-coinbase-pro-dca
          target: /opt/cbpdca
          strip-components: 1

      - name: Restarting daemon
        uses: appleboy/ssh-action@v0.0.6
        env:
          CONFIG: ${{ secrets.CONFIG }}
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
          envs: CONFIG
          script: |
            mv /opt/cbpdca/ubuntu-latest-coinbase-pro-dca/ubuntu-latest-coinbase-pro-dca /opt/cbpdca/coinbase-pro-dca
            rm -r /opt/cbpdca/ubuntu-latest-coinbase-pro-dca
            chmod +x /opt/cbpdca/coinbase-pro-dca
            echo "$CONFIG" > /opt/cbpdca/config.yaml
            cat <<SYSTEMDFILE > /etc/systemd/system/cbpdca.service
            [Unit]
            Description=CBPDCA

            [Service]
            Type=simple
            Restart=on-failure
            RestartSec=3
            ExecStart=/opt/cbpdca/coinbase-pro-dca --config /opt/cbpdca/config.yaml

            [Install]
            WantedBy=multi-user.target
            SYSTEMDFILE
            systemctl daemon-reload
            systemctl restart cbpdca
